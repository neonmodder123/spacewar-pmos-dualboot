name: Stowaway Test (plasma-mobile)
on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * 5' # Run every friday at midnight

env:
  KERNEL_BRANCH: danila/spacewar-testing
  # --- NEW ENV VARS FOR STOWAWAY BUILD ---
  KERNEL_PACKAGE: linux-postmarketos-qcom-sc7280
  DEVICE_NAME: nothing-spacewar
  STOWAWAY_PARTITION: /dev/sda11 # Target partition for the rootfs
  KERNEL_CONFIG_FRAGMENT: sm7325.config # CORRECTED from sc7280.config
  # ---------------------------------------

jobs:
  build-image:
    strategy:
      matrix:
        version: ["default"]

    runs-on: ubuntu-latest
    steps:
      - name: ðŸ’¾ Check out build configurations
        uses: actions/checkout@v4

      # --- Caching Steps ---
      - name: ðŸ“¦ Cache pmbootstrap packages
        uses: actions/cache@v4
        with:
          path: ~/.local/var/pmbootstrap/cache
          key: ${{ runner.os }}-pmbootstrap-${{ hashFiles('**/APKBUILD') }}
          restore-keys: |
            ${{ runner.os }}-pmbootstrap-

      - name: ðŸ’¾ Cache Built Kernel
        uses: actions/cache@v4
        id: cache-kernel
        with:
          path: ~/.local/var/pmbootstrap/packages/main/${{ env.KERNEL_PACKAGE }}*/*.apk
          key: ${{ runner.os }}-kernel-${{ env.KERNEL_PACKAGE }}-${{ env.KERNEL_BRANCH }}-${{ hashFiles(env.KERNEL_CONFIG_FRAGMENT) }}
          restore-keys: |
            ${{ runner.os }}-kernel-${{ env.KERNEL_PACKAGE }}-${{ env.KERNEL_BRANCH }}-
      # ---------------------

      - name: Configure git
        run: |
          git config --global user.email "veythrix@gmail.com"
          git config --global user.name "Veythrix"

      - name: Substitute placeholders in configs
        run: |
          find . -type f -name "*.cfg" -exec sed -i "s|HOME|$(echo $HOME)|;s|NPROC|$(nproc)|" {} +

      - name: Install pmbootstrap from git
        run: |
          git clone https://gitlab.postmarketos.org/postmarketOS/pmbootstrap.git --depth 1
          mkdir -p ~/.local/bin
          ln -s "$PWD/pmbootstrap/pmbootstrap.py" ~/.local/bin/pmbootstrap
          export PATH="$PATH:~/.local/bin"
          pmbootstrap --version

      - name: Set up pmaports and Copy Device Package
        run: |
          echo -e '\n\n' | pmbootstrap init || true
          cd ~/.local/var/pmbootstrap/cache_git/pmaports
          git remote add sc7280 https://github.com/mainlining/pmaports.git
          DEFAULT_BRANCH=danila/spacewar-mr
          git fetch sc7280 $DEFAULT_BRANCH
          git reset --hard sc7280/$DEFAULT_BRANCH
          
          # Ensure device package is copied for pmbootstrap to find it
          PMAPORTS_DIR=~/.local/var/pmbootstrap/cache_git/pmaports
          DEVICE_PATH=device/nothing/Spacewar/
          mkdir -p $PMAPORTS_DIR/$DEVICE_PATH
          
          DEVICE_SOURCE_DIR="$PWD/device/nothing/Spacewar"
          PMAPORTS_DEVICE_DIR="$PWD/device/nothing/Spacewar"
          
          # Create the target device directory if it doesn't exist
          mkdir -p $PMAPORTS_DEVICE_DIR
          
          # 1. Copy all non-directory files (like deviceinfo, APKBUILD)
          find $DEVICE_SOURCE_DIR -maxdepth 1 -type f -exec cp -t $PMAPORTS_DEVICE_DIR {} +
          
          # 2. Copy the contents of the 'etc' directory
          if [ -d "$DEVICE_SOURCE_DIR/etc" ]; then
              mkdir -p $PMAPORTS_DEVICE_DIR/etc
              cp -r $DEVICE_SOURCE_DIR/etc/. $PMAPORTS_DEVICE_DIR/etc/
          fi
          echo "Successfully copied device package files (deviceinfo) and directories (etc/) into pmaports."

      - name: Check kernel branch
        if: matrix.version == 'default'
        run: |
          DEFAULT_BRANCH=danila/spacewar-testing
          echo "Default branch is $DEFAULT_BRANCH"
          echo "KERNEL_BRANCH=$DEFAULT_BRANCH" >> $GITHUB_ENV

      - name: Clone kernel sources
        run: |
          git clone https://github.com/mainlining/linux.git --single-branch --branch ${{ env.KERNEL_BRANCH }} --depth 1

      - name: Choose nothing-spacewar device in pmbootstrap to build kernel
        run: |
          cp nothing-spacewar-plasma.cfg ~/.config/pmbootstrap_v3.cfg
          # Use the corrected sm7325.config
          cp $PWD/${{ env.KERNEL_CONFIG_FRAGMENT }} $PWD/linux/arch/arm64/configs/${{ env.KERNEL_CONFIG_FRAGMENT }}

      - name: Compile kernel with envkernel
        if: steps.cache-kernel.outputs.cache-hit != 'true'
        run: |
          cd linux
          shopt -s expand_aliases
          source ../pmbootstrap/helpers/envkernel.sh
          # Use the corrected sm7325.config
          make defconfig ${{ env.KERNEL_CONFIG_FRAGMENT }}
          make -j$(nproc)
          pmbootstrap build --envkernel ${{ env.KERNEL_PACKAGE }}

      - name: Create artifact directory
        run: |
          mkdir out

      - name: Build nothing-spacewar (Configured for Stowaway)
        run: |
          # 1. Build initial rootfs (using your working install logic)
          cp nothing-spacewar-plasma.cfg ~/.config/pmbootstrap.cfg
          pmbootstrap install --password 9229
          
          ROOTFS_DIR=$(echo ~/.local/var/pmbootstrap/chroot_rootfs_*/)
          
          # 2. CRITICAL: Inject the Stowaway kernel command line argument
          echo "deviceinfo_kernel_cmdline_append=\"pmos.stowaway pmos_root=${{ env.STOWAWAY_PARTITION }}\"" | sudo tee -a ${ROOTFS_DIR}etc/deviceinfo
          
          # 3. Disable mounting /boot in fstab (prevents chroot conflicts)
          sudo sed -i '3,0s/^/#/' ${ROOTFS_DIR}etc/fstab
          
          # 4. Re-install/Re-package to apply the changes to the boot image
          pmbootstrap install --split
          
          # 5. Export the images
          pmbootstrap export
          
          # 6. Create final artifacts (Tarball for Stowaway)
          EXPORT_PATH=/tmp/postmarketOS-export
          ROOT_IMG_PATH=$(find ${EXPORT_PATH} -name "*-root.img" -print -quit)
          BOOT_IMG_PATH=$(find ${EXPORT_PATH} -name "*-boot.img" -print -quit)
          
          PMOS_ROOT_DIR=/tmp/PMOS_ROOT
          mkdir -p ${PMOS_ROOT_DIR}

          # Mount rootfs and create the final compressed archive (tar.xz)
          sudo mount -o loop $ROOT_IMG_PATH ${PMOS_ROOT_DIR}
          
          cd ${PMOS_ROOT_DIR}
          sudo tar -cf $PWD/Spacewar_pmos.tar.xz --use-compress-program='xz -9 -T0' *
          
          sudo umount ${PMOS_ROOT_DIR}
          
          # Move artifacts to the output directory with the user's requested names
          mv $PWD/Spacewar_pmos.tar.xz $PWD/out/Spacewar_pmos.tar.xz
          cp $BOOT_IMG_PATH $PWD/out/boot-nothing-spacewar.img

          # Cleanup
          echo -e "n\nn\ny\n" | pmbootstrap zap

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.DEVICE_NAME }}-stowaway
          path: out/*
          retention-days: 7
