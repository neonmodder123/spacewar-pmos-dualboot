name: 1. Build and Package Kernel Cache Artifact

on:
  workflow_dispatch:
  push:
    paths:
      - 'aports/device/nothing/spacewar/linux-nothing-spacewar/**'
      - '.github/workflows/cache_to_artifact.yml'

env:
  DEVICE_NAME: nothing-spacewar
  KERNEL_PACKAGE: linux-nothing-spacewar

jobs:
  build_kernel_and_package_cache:
    runs-on: ubuntu-latest
    steps:
      - name: üíæ Checkout Code
        uses: actions/checkout@v4

      - name: üì¶ Restore/Cache ALL pmbootstrap Data
        uses: actions/cache@v4
        id: cache-pmbootstrap
        with:
          path: ~/.local/var/pmbootstrap/
          key: pmos_spacewar_FULL_V1-${{ runner.os }}-${{ env.KERNEL_BRANCH }}-${{ hashFiles('**/APKBUILD', env.KERNEL_CONFIG_FRAGMENT) }}
          restore-keys: |
            pmos_spacewar_FULL_V1-${{ runner.os }}-${{ env.KERNEL_BRANCH }}-

      - name: üîß Install pmbootstrap and Initialize
        run: |
          # 1. Install pmbootstrap
          git clone https://gitlab.postmarketos.org/postmarketOS/pmbootstrap.git --depth 1
          mkdir -p ~/.local/bin
          ln -s "$PWD/pmbootstrap/pmbootstrap.py" ~/.local/bin/pmbootstrap
          export PATH="$PATH:~/.local/bin"

          # 2. Initialize pmbootstrap non-interactively
          # Sequence: [edge]\n, nothing\n, spacewar\n, [stable]\n, handset\n, [none]\n, [work path]\n, [pmaports path]\n
          echo "Running pmbootstrap init non-interactively..."
          echo -e "\nnothing\nspacewar\n\nhandset\n\n\n\n" | pmbootstrap init

      - name: ‚öôÔ∏è Build Target Kernel Package
        run: |
          export PATH="$PATH:~/.local/bin"
          echo "Starting kernel build for ${{ env.DEVICE_NAME }}..."
          
          # Force the device codename and build the specific kernel package
          pmbootstrap build --device ${{ env.DEVICE_NAME }} ${{ env.KERNEL_PACKAGE }}

      - name: üéÅ Package pmbootstrap Data into Tar Archive
        run: |
          # Use tar to compress the entire pmbootstrap variable data directory
          TAR_FILE_NAME="pmbootstrap-cache-data.tar.gz"
          echo "Creating $TAR_FILE_NAME artifact..."
          tar -czf $TAR_FILE_NAME -C /home/runner/.local/var/ pmbootstrap/

      - name: üöÄ Upload Cache Tarball as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pmos-kernel-cache-tarball
          path: pmbootstrap-cache-data.tar.gz
          retention-days: 7
